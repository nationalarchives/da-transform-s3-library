name: Workflow to update the transform s3 library package.
on:
  push:
    branches:
      - main
      - feature/DTE-466_deploy_tre_lib_to_code_artifactory
permissions:
  id-token: write  # required by aws-actions/configure-aws-credentials
  contents: write  # to push new git tag
jobs:
  deploy-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Get the version to use to tag this build
        id: build-tag
        uses: nationalarchives/tre-github-actions/.github/actions/get-next-version@0.0.1
        with:
          repo-name: ${{ github.event.repository.name }}
      - name: Diagnostic info
        run: |
          printf 'steps.build-tag.outputs.next-version=%s\n' "${{ steps.build-tag.outputs.next-version }}"
      - run: |
          printf '{\n  "version": "%s"\n}\n' "${{ steps.build-tag.outputs.next-version }}" > "s3_lib/about.json"
      - run : |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_ARN }}
          aws-region: ${{ secrets.REGION }}
          role-session-name: role-session-name-${{ github.actor }}-${{ github.triggering_actor }}
      - run: |
          export BUILD_VERSION="${{ steps.build-tag.outputs.next-version }}"
          export TWINE_USERNAME=${{ secrets.USER_NAME }} 
          export TWINE_PASSWORD=`aws codeartifact get-authorization-token --domain ${{ secrets.DOMAIN }} --domain-owner ${{ secrets.MANAGEMENT_ARN_NUMBER }} --region eu-west-2 --query authorizationToken --output text`
          export TWINE_REPOSITORY_URL=`aws codeartifact get-repository-endpoint --domain ${{ secrets.DOMAIN }} --domain-owner ${{ secrets.MANAGEMENT_ARN_NUMBER }} --repository ${{ secrets.REPOSITORY }} --region ${{ secrets.REGION }} --format pypi --query repositoryEndpoint --output text`          
          python setup.py bdist_wheel --verbose
          twine upload dist/*
      - run: |
          aws codeartifact login --tool pip --repository ${{ secrets.REPOSITORY }} --domain ${{ secrets.DOMAIN }} --domain-owner ${{ secrets.MANAGEMENT_ARN_NUMBER }} --region ${{ secrets.REGION }}
          pip install s3-lib
      - name: Add Git tag for this build
        run: |
          git tag ${{ steps.build-tag.outputs.next-version }}
          git push origin ${{ steps.build-tag.outputs.next-version }}
      
